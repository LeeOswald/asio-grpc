name: Build

on:
  push:
    paths:
      - '**.cpp'
      - '**.hpp'
      - '**.ipp'
      - '**.cmake'
      - '**/CMakeLists.txt'
      - '.github/workflows/build.yml'
  pull_request:
    paths:
      - '**.cpp'
      - '**.hpp'
      - '**.ipp'
      - '**.cmake'
      - '**/CMakeLists.txt'
      - '.github/workflows/build.yml'

jobs:
  Build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows-MSVC/2022/x64/Release",
            os: windows-2022,
            config: Release,
            triplet: x64-windows,
            cmake-extra-args: "",
          }
          - {
            name: "MacOSX/11/x64/Release",
            os: macos-11,
            config: Release,
            triplet: x64-osx,
            cmake-extra-args: "-DASIO_GRPC_USE_BOOST_CONTAINER=on",
          }

    steps:
    - uses: actions/checkout@v2

    - name: Install vcpkg
      uses: lukka/run-vcpkg@v7
      with:
        vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
        vcpkgArguments: 'doctest grpc[codegen] boost-coroutine boost-core boost-intrusive boost-lockfree boost-asio boost-interprocess boost-thread boost-container'
        vcpkgGitCommitId: 042e1db92d115819bba6bffd681a174543111139 # Sep 28, 2021
        vcpkgTriplet: ${{ matrix.config.triplet }}

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build ${{ matrix.config.cmake-extra-args }} "-DCMAKE_TOOLCHAIN_FILE=${{ runner.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_MANIFEST_MODE=off -DCMAKE_BUILD_TYPE=${{ matrix.config.config }} -DASIO_GRPC_BUILD_TESTS=on -DASIO_GRPC_DISCOVER_TESTS=on -DASIO_GRPC_BUILD_EXAMPLES=on -DASIO_GRPC_BUILD_BENCHMARK=on -DCMAKE_DISABLE_PRECOMPILE_HEADERS=on

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.config.config }} --parallel 2

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: ctest -C ${{ matrix.config.config }} -T test -j 2 --output-on-failure --timeout 200
