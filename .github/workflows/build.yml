name: Build

on:
  push:
    paths:
      - '**.cpp'
      - '**.hpp'
      - '**.ipp'
      - '**.cmake'
      - '**/CMakeLists.txt'
      - '.github/workflows/build.yml'
      - 'sonar-project.properties'
  pull_request:
    paths:
      - '**.cpp'
      - '**.hpp'
      - '**.ipp'
      - '**.cmake'
      - '**/CMakeLists.txt'
      - '.github/workflows/build.yml'
      - 'sonar-project.properties'

env:
  VCPKG_ARGUMENTS: "doctest grpc[codegen] boost-coroutine boost-core boost-intrusive boost-lockfree boost-asio boost-interprocess boost-thread boost-container"
  VCPKG_VERSION: "042e1db92d115819bba6bffd681a174543111139" # Sep 28, 2021

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows/2022/MSVC-19.30.30528.0/Release",
            os: windows-2022,
            config: Release,
            triplet: x64-windows,
            cmake-extra-args: "",
            parallel: 1,
          }
          - {
            name: "MacOSX/11/AppleClang-12.0.5.12050022/Release",
            os: macos-11,
            config: Release,
            triplet: x64-osx,
            cmake-extra-args: "-DASIO_GRPC_USE_BOOST_CONTAINER=on",
            parallel: 2,
          }

    steps:
    - uses: actions/checkout@v2

    - name: Install vcpkg
      uses: lukka/run-vcpkg@v7
      with:
        vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
        vcpkgArguments: ${{ env.VCPKG_ARGUMENTS }}
        vcpkgGitCommitId: ${{ env.VCPKG_VERSION }}
        vcpkgTriplet: ${{ matrix.config.triplet }}

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build ${{ matrix.config.cmake-extra-args }} "-DCMAKE_TOOLCHAIN_FILE=${{ runner.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_MANIFEST_MODE=off -DCMAKE_BUILD_TYPE=${{ matrix.config.config }} -DASIO_GRPC_BUILD_TESTS=on -DASIO_GRPC_DISCOVER_TESTS=on -DASIO_GRPC_BUILD_EXAMPLES=on -DASIO_GRPC_BUILD_BENCHMARK=on -DCMAKE_DISABLE_PRECOMPILE_HEADERS=on

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.config.config }} --parallel ${{ matrix.config.parallel }}

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: ctest -C ${{ matrix.config.config }} -T test -j 2 --output-on-failure --timeout 200

  build-and-scan:
    name: Ubuntu/20.04/GCC-11.1.0/Debug
    runs-on: ubuntu-20.04

    steps:
    - name: Install gcc-11
      run: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test &&\
        sudo apt-get install -y g++-11 ninja-build &&\
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-11 50 &&\
        sudo update-alternatives --set cc /usr/bin/gcc-11 &&\
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-11 50 &&\
        sudo update-alternatives --set c++ /usr/bin/g++-11  &&\
        sudo update-alternatives --install /usr/bin/cpp cpp /usr/bin/g++-11 50 &&\
        sudo update-alternatives --set cpp /usr/bin/g++-11

    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of sonarsource reporting
        fetch-depth: 0

    - name: Install vcpkg
      uses: lukka/run-vcpkg@v7
      with:
        vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
        vcpkgArguments: ${{ env.VCPKG_ARGUMENTS }}
        vcpkgGitCommitId: ${{ env.VCPKG_VERSION }}
        vcpkgTriplet: x64-linux

    - name: Configure CMake
      run: |
        cmake -B ${{ github.workspace }}/build \
          -GNinja \
          -DCMAKE_TOOLCHAIN_FILE=${VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake \
          -DVCPKG_MANIFEST_MODE=off \
          -DCMAKE_EXPORT_COMPILE_COMMANDS=on \
          -DCMAKE_BUILD_TYPE=Debug \
          -DASIO_GRPC_BUILD_TESTS=on \
          -DASIO_GRPC_DISCOVER_TESTS=on \
          -DASIO_GRPC_BUILD_EXAMPLES=on \
          -DASIO_GRPC_BUILD_BENCHMARK=on \
          -DCMAKE_DISABLE_PRECOMPILE_HEADERS=on \
          -DASIO_GRPC_TEST_COVERAGE=on \
          -DASIO_GRPC_GCOV_PROGRAM=/usr/bin/gcov-11

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config Debug --parallel 2

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: ctest -C Debug -T test -j 2 --output-on-failure --timeout 200

    - name: Coverage
      working-directory: /
      run: |
        cmake --build ${{ github.workspace }}/build --config Debug --target asio-grpc-test-cpp20-coverage &&\
        mv *.gcov ${{ github.workspace }}/build

    - name: Download sonar-scanner
      uses: warchant/setup-sonar-scanner@v3
      with:
        version: 4.6.2.2472

    - name: Run sonar-scanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        sonar-scanner \
          -Dsonar.cfamily.compile-commands=${{ github.workspace }}/build/compile_commands.json \
          -Dsonar.cfamily.gcov.reportsPath=${{ github.workspace }}/build \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
